// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Header component should match snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header
    user={
      Object {
        "name": "Lola",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Link
          replace={false}
          to="/"
        >
          <h1>
            <span
              className="header-one"
            >
              Movie
            </span>
            <span
              className="header-two"
            >
              Tracker
            </span>
          </h1>
        </Link>,
        <div
          className="user-box"
        >
          <p
            className="user"
          >
            Welcome,
            Lola
            !
          </p>
          <Link
            className="login-link favorites-link"
            replace={false}
            to="/favorites"
          >
            View Favorites
          </Link>
          <Link
            className="login-link signout"
            onClick={[Function]}
            replace={false}
            to="/login"
          >
            Sign Out
          </Link>
        </div>,
      ],
      "className": "header",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "children": <h1>
            <span
              className="header-one"
            >
              Movie
            </span>
            <span
              className="header-two"
            >
              Tracker
            </span>
          </h1>,
          "replace": false,
          "to": "/",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="header-one"
              >
                Movie
              </span>,
              <span
                className="header-two"
              >
                Tracker
              </span>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "Movie",
                "className": "header-one",
              },
              "ref": null,
              "rendered": "Movie",
              "type": "span",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "Tracker",
                "className": "header-two",
              },
              "ref": null,
              "rendered": "Tracker",
              "type": "span",
            },
          ],
          "type": "h1",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <p
              className="user"
            >
              Welcome,
              Lola
              !
            </p>,
            <Link
              className="login-link favorites-link"
              replace={false}
              to="/favorites"
            >
              View Favorites
            </Link>,
            <Link
              className="login-link signout"
              onClick={[Function]}
              replace={false}
              to="/login"
            >
              Sign Out
            </Link>,
          ],
          "className": "user-box",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Welcome, ",
                "Lola",
                "!",
              ],
              "className": "user",
            },
            "ref": null,
            "rendered": Array [
              "Welcome, ",
              "Lola",
              "!",
            ],
            "type": "p",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": "View Favorites",
              "className": "login-link favorites-link",
              "replace": false,
              "to": "/favorites",
            },
            "ref": null,
            "rendered": "View Favorites",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": "Sign Out",
              "className": "login-link signout",
              "onClick": [Function],
              "replace": false,
              "to": "/login",
            },
            "ref": null,
            "rendered": "Sign Out",
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Link
            replace={false}
            to="/"
          >
            <h1>
              <span
                className="header-one"
              >
                Movie
              </span>
              <span
                className="header-two"
              >
                Tracker
              </span>
            </h1>
          </Link>,
          <div
            className="user-box"
          >
            <p
              className="user"
            >
              Welcome,
              Lola
              !
            </p>
            <Link
              className="login-link favorites-link"
              replace={false}
              to="/favorites"
            >
              View Favorites
            </Link>
            <Link
              className="login-link signout"
              onClick={[Function]}
              replace={false}
              to="/login"
            >
              Sign Out
            </Link>
          </div>,
        ],
        "className": "header",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": <h1>
              <span
                className="header-one"
              >
                Movie
              </span>
              <span
                className="header-two"
              >
                Tracker
              </span>
            </h1>,
            "replace": false,
            "to": "/",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <span
                  className="header-one"
                >
                  Movie
                </span>,
                <span
                  className="header-two"
                >
                  Tracker
                </span>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "Movie",
                  "className": "header-one",
                },
                "ref": null,
                "rendered": "Movie",
                "type": "span",
              },
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "Tracker",
                  "className": "header-two",
                },
                "ref": null,
                "rendered": "Tracker",
                "type": "span",
              },
            ],
            "type": "h1",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <p
                className="user"
              >
                Welcome,
                Lola
                !
              </p>,
              <Link
                className="login-link favorites-link"
                replace={false}
                to="/favorites"
              >
                View Favorites
              </Link>,
              <Link
                className="login-link signout"
                onClick={[Function]}
                replace={false}
                to="/login"
              >
                Sign Out
              </Link>,
            ],
            "className": "user-box",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Welcome, ",
                  "Lola",
                  "!",
                ],
                "className": "user",
              },
              "ref": null,
              "rendered": Array [
                "Welcome, ",
                "Lola",
                "!",
              ],
              "type": "p",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "children": "View Favorites",
                "className": "login-link favorites-link",
                "replace": false,
                "to": "/favorites",
              },
              "ref": null,
              "rendered": "View Favorites",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "children": "Sign Out",
                "className": "login-link signout",
                "onClick": [Function],
                "replace": false,
                "to": "/login",
              },
              "ref": null,
              "rendered": "Sign Out",
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Header component should match snapshot 2`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header
    user={Object {}}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Link
          replace={false}
          to="/"
        >
          <h1>
            <span
              className="header-one"
            >
              Movie
            </span>
            <span
              className="header-two"
            >
              Tracker
            </span>
          </h1>
        </Link>,
        <div
          className="no-user-box"
        >
          <Link
            className="login-link"
            replace={false}
            to="/login"
          >
            Log In
          </Link>
          <Link
            className="login-link"
            replace={false}
            to="/createuser"
          >
            Create Account
          </Link>
        </div>,
      ],
      "className": "header",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "children": <h1>
            <span
              className="header-one"
            >
              Movie
            </span>
            <span
              className="header-two"
            >
              Tracker
            </span>
          </h1>,
          "replace": false,
          "to": "/",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="header-one"
              >
                Movie
              </span>,
              <span
                className="header-two"
              >
                Tracker
              </span>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "Movie",
                "className": "header-one",
              },
              "ref": null,
              "rendered": "Movie",
              "type": "span",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "Tracker",
                "className": "header-two",
              },
              "ref": null,
              "rendered": "Tracker",
              "type": "span",
            },
          ],
          "type": "h1",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Link
              className="login-link"
              replace={false}
              to="/login"
            >
              Log In
            </Link>,
            <Link
              className="login-link"
              replace={false}
              to="/createuser"
            >
              Create Account
            </Link>,
          ],
          "className": "no-user-box",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": "Log In",
              "className": "login-link",
              "replace": false,
              "to": "/login",
            },
            "ref": null,
            "rendered": "Log In",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": "Create Account",
              "className": "login-link",
              "replace": false,
              "to": "/createuser",
            },
            "ref": null,
            "rendered": "Create Account",
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Link
            replace={false}
            to="/"
          >
            <h1>
              <span
                className="header-one"
              >
                Movie
              </span>
              <span
                className="header-two"
              >
                Tracker
              </span>
            </h1>
          </Link>,
          <div
            className="no-user-box"
          >
            <Link
              className="login-link"
              replace={false}
              to="/login"
            >
              Log In
            </Link>
            <Link
              className="login-link"
              replace={false}
              to="/createuser"
            >
              Create Account
            </Link>
          </div>,
        ],
        "className": "header",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": <h1>
              <span
                className="header-one"
              >
                Movie
              </span>
              <span
                className="header-two"
              >
                Tracker
              </span>
            </h1>,
            "replace": false,
            "to": "/",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <span
                  className="header-one"
                >
                  Movie
                </span>,
                <span
                  className="header-two"
                >
                  Tracker
                </span>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "Movie",
                  "className": "header-one",
                },
                "ref": null,
                "rendered": "Movie",
                "type": "span",
              },
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "Tracker",
                  "className": "header-two",
                },
                "ref": null,
                "rendered": "Tracker",
                "type": "span",
              },
            ],
            "type": "h1",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Link
                className="login-link"
                replace={false}
                to="/login"
              >
                Log In
              </Link>,
              <Link
                className="login-link"
                replace={false}
                to="/createuser"
              >
                Create Account
              </Link>,
            ],
            "className": "no-user-box",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "children": "Log In",
                "className": "login-link",
                "replace": false,
                "to": "/login",
              },
              "ref": null,
              "rendered": "Log In",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "children": "Create Account",
                "className": "login-link",
                "replace": false,
                "to": "/createuser",
              },
              "ref": null,
              "rendered": "Create Account",
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
